<?xml version="1.0" encoding="UTF-8"?>
<!--
 * This script belongs to the FLOW3 build system.                         *
 *                                                                        *
 * It is free software; you can redistribute it and/or modify it under    *
 * the terms of the GNU Lesser General Public License as published by the *
 * Free Software Foundation, either version 3 of the License, or (at your *
 * option) any later version.                                             *
 *                                                                        *
 * This script is distributed in the hope that it will be useful, but     *
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHAN-    *
 * TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser       *
 * General Public License for more details.                               *
 *                                                                        *
 * You should have received a copy of the GNU Lesser General Public       *
 * License along with the script.                                         *
 * If not, see http://www.gnu.org/licenses/lgpl.html                      *
 *                                                                        *
 * The TYPO3 project - inspiring people to share!                         *
-->
<project name="Documentation">

	<target name="doc-clean" description="Remove all rendered documentation inside packages">
		<foreach param="path.package" target="doc-clean-package">
			<fileset refid="paths-packages"/>
		</foreach>
	</target>

	<target name="doc-render" depends="doc-render-manuals, doc-render-apis"
		description="Build all documentation inside packages"/>

	<target name="doc-render-apis">
		<foreach param="path.package" target="doc-render-api">
			<fileset refid="paths-packages"/>
		</foreach>
	</target>

	<target name="doc-render-manuals">
		<!--<foreach param="path.package" target="doc-render-manual">
			<fileset refid="paths-packages"/>
		</foreach>-->
	</target>

	<target name="doc-clean-package">
		<fail unless="path.package" message="You must set the 'path.package' property to a package path."/>

		<delete dir="${path.package}/Documentation/API/" quiet="true"/>
		<delete dir="${path.package}/Documentation/Manual/HTML" quiet="true"/>
	</target>

	<target name="doc-render-api">
		<fail unless="path.package" message="You must set the 'path.package' property to a package path."/>

		<if>
			<available file="${path.package}/Classes" type="dir"/>
			<then>
				<delete dir="${path.package}/Documentation/API/HTML/en" quiet="true"/>
				<mkdir dir="${path.package}/Documentation/API/HTML/en"/>

				<xmlproperty file="${path.package}/Meta/Package.xml"/>
				<phpuml
					input="${path.package}/Classes"
					output="${path.package}/Documentation/API/HTML/en"
					title="${package.title}"/>
				<copy file="${project.commonBuildDirectory}/Resources/API/style.css" tofile="${path.package}/Documentation/API/HTML/en/style.css" overwrite="true"/>
			</then>
		</if>
	</target>

	<target name="doc-render-manual">
		<fail unless="path.package" message="You must set the 'path.package' property to a package path."/>

		<if>
			<available file="${path.package}/Documentation/${manual.folder}/DocBook/en"/>
			<then>
				<property name="manual.sourceDirectory" value="${path.package}/Documentation/${manual.folder}/DocBook/en"/>
				<property name="manual.targetDirectory" value="${path.package}/Documentation/${manual.folder}/HTML/en"/>

				<delete dir="${manual.targetDirectory}" quiet="true"/>
				<mkdir dir="${manual.targetDirectory}"/>

				<copy file="${project.commonBuildDirectory}/Resources/Manual/Css/TheGuide.css" todir="${manual.targetDirectory}"/>
				<copy todir="${manual.targetDirectory}/images/">
					<fileset dir="${project.commonBuildDirectory}/Resources/Manual/Xsl/DocBookXSLNS/images">
						<include name="**"/>
					</fileset>
				</copy>
				<copy todir="${manual.targetDirectory}">
					<fileset dir="${manual.sourceDirectory}">
						<include name="**/*.png"/>
						<include name="**/*.jpg"/>
						<include name="**/*.gif"/>
						<include name="**/*.svg"/>
					</fileset>
				</copy>

				<delete dir="${project.temporaryDirectory}DocBookRendering" quiet="true"/>
				<mkdir dir="${project.temporaryDirectory}DocBookRendering" />
				<copy todir="${project.temporaryDirectory}DocBookRendering">
					<filterchain>
						<replacetokens begintoken="{" endtoken="}">
							<token key="DocBookXSLNSPath" value="${project.commonBuildDirectory}Resources/Manual/Xsl/DocBookXSLNS/"/>
							<token key="outputDirectory" value="${manual.targetDirectory}"/>
						</replacetokens>
					</filterchain>
					<fileset dir="${project.commonBuildDirectory}/Resources/Manual/Xsl">
						<include name="html.xsl"/>
					</fileset>
				</copy>
				<copy todir="${project.temporaryDirectory}DocBookRendering">
					<filterchain>
						<xincludefilter basedir="${manual.sourceDirectory}"/>
					</filterchain>
					<fileset dir="${manual.sourceDirectory}">
						<include name="Index.xml"/>
					</fileset>
				</copy>
				<xslt todir="${manual.targetDirectory}" style="${project.buildDirectory}/Temporary/DocBookRendering/html.xsl">
					<fileset dir="${project.temporaryDirectory}DocBookRendering">
						<include name="Index.xml"/>
					</fileset>
				</xslt>
			</then>
		</if>
	</target>

	<target name="doc-release-api">
		<fail unless="packageKey" message="You must set the 'packageKey' property to a package key."/>

		<available file="Packages/Framework/${packageKey}/Meta/Package.xml" type="file" property="packagesSubPath" value="Framework"/>
		<available file="Packages/Application/${packageKey}/Meta/Package.xml" type="file" property="packagesSubPath" value="Application"/>
		<available file="Packages/Website/${packageKey}/Meta/Package.xml" type="file" property="packagesSubPath" value="Website"/>
		<if>
			<not>
				<available file="Packages/${packagesSubPath}/${packageKey}/Documentation/API/HTML/en/index.html" type="file"/>
			</not>
			<then>
				<phingcall target="doc-render-api">
					<property name="path.package" value="Packages/${packagesSubPath}/${packageKey}"/>
				</phingcall>
			</then>
		</if>

		<mkdir dir="${project.archivesDirectory}"/>
		<delete file="${project.archivesDirectory}/${packageKey}-API.zip" quiet="true"/>
		<zip destfile="${project.archivesDirectory}/${packageKey}-API.zip">
			<fileset dir="${project.basedir}/Packages/${packagesSubPath}/${packageKey}/Documentation/API/HTML/en">
				<include name="**"/>
			</fileset>
		</zip>

	<!-- sadly the ssh2 pecl extension seems broken and/or dead,
	     so we use exec instead of SshTask and ScpTask -->
	<!--	<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.website} rm -rf ${path.documentationBase.website}${packageKey}/API"/>
		<exec logoutput="true" checkreturn="true" command="ssh ${ssh.host.website} mkdir -p ${path.documentationBase.website}${packageKey}/API"/>
		<exec logoutput="true" checkreturn="true" command="scp -r ${project.archivesDirectory}/${packageKey}-API.zip ${ssh.host.website}:${path.documentationBase.website}${packageKey}/"/>
		<exec logoutput="true" checkreturn="true" dir="Packages/${packagesSubPath}/${packageKey}/Documentation/API/HTML/en" command="scp -r * ${ssh.host.website}:${path.documentationBase.website}${packageKey}/API/"/>-->

	</target>
</project>